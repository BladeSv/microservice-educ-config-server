management.endpoint.health.probes.enabled=true
server.port=8080
spring.datasource.url=jdbc:postgresql://resource-database:5432/mp3resource
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
user.aws.awsAccessKeyId=test
user.aws.awsRegion=us-east-1
user.aws.awsSecretAccessKey=test2;
user.aws.s3.bucket.name=bladesv
user.aws.s3Endpoint=http://localstack:4566/
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://eureka-server:8098/eureka/

spring.kafka.client-id=resource-service
spring.kafka.bootstrap-servers=http://kafka:9092
spring.kafka.consumer.bootstrap-servers=http://kafka:9092
spring.kafka.consumer.client-id=resource-service-consumer

spring.kafka.producer.client-id=resource-service-producer
spring.kafka.producer.bootstrap-servers=http://kafka:9092
application.kafka.resource-service.topic=resource-service-topic
application.kafka.resource-processor.topic=resource-processor-topic
user.storage-service=http://storage-service/storages/
application.defaultStorages={id: 1, storageType: STAGING, bucket: default-staging-bucket, path: default-staging-file}, {id: 2, storageType: PERMANENT, bucket: default-permanent-bucket, path: default-permanent-file}